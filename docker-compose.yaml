version: '3'

services:

  # -----------------------------------------------------------
  # DATABASE (POSTGRES)
  # -----------------------------------------------------------
  kong-database:
    image: postgres:9.6
    container_name: kong-database
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - kong-network

  # -----------------------------------------------------------
  # KONG BOOTSTRAP
  # -----------------------------------------------------------
  kong-bootstrap:
    image: kong
    hostname: kong-bootstrap
    container_name: kong-bootstrap
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    networks:
      - kong-network

  # -----------------------------------------------------------
  # KONG
  # -----------------------------------------------------------
  kong:
    image: kong
    container_name: kong
    environment:
      - LC_CTYPE=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    restart: always
    healthcheck:
      test:
        - CMD
        - nc
        - -z
        - localhost
        - "8443"
      retries: 10
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    links:
      - kong-database:kong-database
    depends_on:
      - kong-bootstrap
    networks:
      - kong-network

  # -----------------------------------------------------------
  # DECK (apply kong.yaml)
  # -----------------------------------------------------------
  deck:
    image: kong/deck
    container_name: deck
    restart: on-failure
    environment:
      DECK_KONG_ADDR: http://kong:8001
    depends_on:
      - kong
    #entrypoint: deck ping
    #entrypoint: deck dump -o /mnt/deck/kong.yaml
    entrypoint: deck sync -s /mnt/deck/kong.yaml
    volumes:
      - ${PWD}/config/:/mnt/deck/
    networks:
      - kong-network

  # -----------------------------------------------------------
  # KONGA
  # -----------------------------------------------------------
  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    links:
      - kong:kong
    container_name: konga
    restart: always
    depends_on:
      - kong-database
    environment:
      #- NODE_ENV=prepare
      #- NODE_ENV=production
      - DB_ADAPTER=postgres
      - DB_URI=postgresql://kong:kong@kong-database
      - DB_USER=kong
      - DB_PASSWORD=kong
      - DB_DATABASE=konga
      - KONGA_LOG_LEVEL=debug
    networks:
      - kong-network

  # -----------------------------------------------------------
  # PROMETHEUS
  # -----------------------------------------------------------
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    depends_on:
      - kong
    volumes:
      - ${PWD}/config:/etc/prometheus/
    command: "--config.file=/etc/prometheus/prometheus.yaml --storage.tsdb.path=/prometheus"
    ports:
      - 9090:9090
    networks:
      - kong-network

  # -----------------------------------------------------------
  # LOKI
  # -----------------------------------------------------------
  loki:
    image: grafana/loki:2.3.0
    container_name: loki
    restart: always
    volumes:
      - ./config/loki-config.yaml:/etc/loki/loki-config.yaml
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - kong-network

  # -----------------------------------------------------------
  # LOKI-ROUTER
  # -----------------------------------------------------------
  loki-router:
    image: nobio/loki-router:master
    container_name: loki-router
    restart: always
    ports:
      - "30500:30500"
      - "30501:30501"
    environment:
      - LOKI_URL=http://loki:3100
    depends_on:
      - loki
    networks:
      - kong-network

# -----------------------------------------------------------
# NETWORK definition
# -----------------------------------------------------------
networks:
  kong-network:
    external: true
    name: nobio-network
