version: '3'

services:
  # -----------------------------------------------------------
  # DATABASE (POSTGRES)
  # -----------------------------------------------------------
  kong-database:
    image: ${POSTGRES_IMAGE}
    container_name: kong-database
    restart: always
    ports:
      - 5432:5432
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - kong-network

  # -----------------------------------------------------------
  # KONG BOOTSTRAP
  # -----------------------------------------------------------
  kong-bootstrap:
    image: ${KONG_IMAGE}
    hostname: kong-bootstrap
    container_name: kong-bootstrap
    restart: on-failure
    env_file:
      - .env
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    networks:
      - kong-network

  # -----------------------------------------------------------
  # KONG MIGRATION
  # -----------------------------------------------------------
  kong-migration:
    image: ${KONG_IMAGE}
    hostname: kong-migration
    container_name: kong-migration
    restart: on-failure
    env_file:
      - .env
    command: kong migrations up && kong migrations finish
    depends_on:
      - kong-database
    networks:
      - kong-network


  # -----------------------------------------------------------
  # KONG
  # -----------------------------------------------------------
  kong:
    image: ${KONG_IMAGE}
    container_name: kong
    restart: always
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 5s
      timeout: 2s
      retries: 10
    ports:
      - 8000:8000
      - 8001:8001
      - 8002:8002
      - 8003:8003
      - 8004:8004
      - 8443:8443
      - 8444:8444
      - 8445:8445
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    links:
      - kong-database:kong-database
    depends_on:
      - kong-bootstrap
      - kong-migration
      - kong-database
    networks:
      - kong-network

  # -----------------------------------------------------------
  # DECK (apply kong.yaml)
  # -----------------------------------------------------------
  deck:
    image: ${DECK_IMAGE}
    container_name: deck
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - kong
    entrypoint: deck gateway sync /mnt/deck/kong.yaml
    volumes:
      - ${PWD}/config/:/mnt/deck/
    networks:
      - kong-network


# -----------------------------------------------------------
# NETWORK definition
# -----------------------------------------------------------
networks:
  network-kong:
    driver: bridge
    name: kong-network
