version: '3'

services:
  # -----------------------------------------------------------
  # DATABASE (POSTGRES)
  # -----------------------------------------------------------
  kong-database:
    image: ${POSTGRES_IMAGE}
    container_name: kong-database
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - kong-network

  # -----------------------------------------------------------
  # KONG BOOTSTRAP
  # -----------------------------------------------------------
  kong-bootstrap:
    image: ${KONG_IMAGE}
    hostname: kong-bootstrap
    container_name: kong-bootstrap
    restart: on-failure
    env_file:
      - .env
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    networks:
      - kong-network

  # -----------------------------------------------------------
  # KONG MIGRATION
  # -----------------------------------------------------------
  kong-migration:
    image: ${KONG_IMAGE}
    hostname: kong-migration
    container_name: kong-migration
    restart: on-failure
    env_file:
      - .env
    command: kong migrations up && kong migrations finish
    depends_on:
      - kong-database
    networks:
      - kong-network

  # -----------------------------------------------------------
  # KONG
  # -----------------------------------------------------------
  kong:
    image: ${KONG_IMAGE}
    container_name: kong
    restart: always
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 5s
      timeout: 2s
      retries: 10
    ports:
      - 8000:8000
      - 8001:8001
      - 8002:8002
      - 8003:8003
      - 8004:8004
      - 8443:8443
      - 8444:8444
      - 8445:8445
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    links:
      - kong-database:kong-database
    depends_on:
      - kong-bootstrap
      #- jaeger
      - loki
      - loki-router
      - prometheus
    networks:
      - kong-network

  # -----------------------------------------------------------
  # DECK (apply kong.yaml)
  # -----------------------------------------------------------
  deck:
    image: ${DECK_IMAGE}
    container_name: deck
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - kong
    entrypoint: deck gateway sync /mnt/deck/kong.yaml
    volumes:
      - ${PWD}/config/:/mnt/deck/
    networks:
      - kong-network

  # -----------------------------------------------------------
  # PROMETHEUS
  # -----------------------------------------------------------
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - ${PWD}/config:/etc/prometheus/
    command: "--config.file=/etc/prometheus/prometheus.yaml --storage.tsdb.path=/prometheus"
    ports:
      - 9090:9090
    networks:
      - kong-network

  # -----------------------------------------------------------
  # LOKI
  # -----------------------------------------------------------
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: always
    volumes:
      - ./config/loki-config.yaml:/etc/loki/loki-config.yaml
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - kong-network

  # -----------------------------------------------------------
  # LOKI-ROUTER
  # -----------------------------------------------------------
  loki-router:
    image: ${LOKI_ROUTER_IMAGE}
    container_name: loki-router
    restart: always
    ports:
      - "30500:30500"
      - "30501:30501"
    environment:
      - LOKI_URL=http://loki:3100
    depends_on:
      - loki
    networks:
      - kong-network

  # -----------------------------------------------------------
  # JAEGER ALL-IN-ONE
  # -----------------------------------------------------------
  #jaeger:
  #  container_name: ${JAEGER_IMAGE}
  #  image: jaegertracing/all-in-one:latest
  #  restart: always
  #  ports:
  #  - 5775:5775/udp
  #  - 6831:6831/udp
  #  - 6832:6832/udp
  #  - 5778:5778
  #  - 16686:16686
  #  - 14250:14250
  #  - 14268:14268
  #  - 14269:14269
  #  - 9411:9411
  #  environment:
  # - COLLECTOR_ZIPKIN_HOST_PORT=9411
  # networks:
  # - kong-network

  # -----------------------------------------------------------
  # ZIPKIN ALL-IN-ONE
  # -----------------------------------------------------------
  #zipkin-all-in-one:
  #  image: openzipkin/zipkin:latest
  #  ports:
  #    - "9411:9411"

# -----------------------------------------------------------
# NETWORK definition
# -----------------------------------------------------------
#networks:
#  kong-network:
#    external: true
#    name: nobio-network
# -----------------------------------------------------------
# NETWORK definition
# -----------------------------------------------------------
networks:
  kong-network:
    driver: bridge
    name: kong-network
